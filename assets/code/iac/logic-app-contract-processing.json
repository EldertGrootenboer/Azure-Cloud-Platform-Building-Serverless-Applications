{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "functionApp": {
            "defaultValue": {
                "functions": {
                    "pgpEncryptor": "PGPEncryptor"
                },
                "name": "func-building-serverless-applications"
            },
            "type": "object"
        },
        "general": {
            "defaultValue": {
                "location": "[resourceGroup().location]",
                "tags": {
                    "LastModifiedDate": "[utcNow()]",
                    "Project": "Azureâ€™s Cloud Platform - Building Serverless Applications",
                    "Purpose": "Session"
                }
            },
            "type": "object"
        },
        "logicApp": {
            "defaultValue": {
                "apiConnections": {
                    "azureblob": "azureblob",
                    "azureeventgrid": "azureeventgrid",
                    "office365": "office365"
                },
                "name": "logic-contract-processing"
            },
            "type": "object"
        },
        "storageAccount": {
            "defaultValue": {
                "containers": {
                    "contracts": "contracts"
                },
                "name": "[concat('st', uniqueString(resourceGroup().name))]"
            },
            "type": "object"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicApp').name]",
            "location": "[parameters('general').location]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_resource_event_occurs": {
                            "splitOn": "@triggerBody()",
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "destination": {
                                            "endpointType": "webhook",
                                            "properties": {
                                                "endpointUrl": "@{listCallbackUrl()}"
                                            }
                                        },
                                        "filter": {
                                            "includedEventTypes": [
                                                "Microsoft.Storage.BlobCreated"
                                            ],
                                            "subjectEndsWith": ".pdf"
                                        },
                                        "topic": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccount').name)]"
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureeventgrid']['connectionId']"
                                    }
                                },
                                "path": "[concat('/subscriptions/@{encodeURIComponent(''', subscription().subscriptionId, ''')}/providers/@{encodeURIComponent(''Microsoft.Storage.StorageAccounts'')}/resource/eventSubscriptions')]",
                                "queries": {
                                    "x-ms-api-version": "2017-06-15-preview"
                                }
                            }
                        }
                    },
                    "actions": {
                        "Email": {
                            "runAfter": {
                                "Filename": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Email",
                                        "type": "string",
                                        "value": "@{substring(variables('Filename'), 0, indexOf(variables('Filename'), '_'))}"
                                    }
                                ]
                            }
                        },
                        "Filename": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Filename",
                                        "type": "string",
                                        "value": "@{substring(triggerBody()?['subject'], add(lastIndexOf(triggerBody()?['subject'], '/'), 1))}"
                                    }
                                ]
                            }
                        },
                        "Get_blob_content": {
                            "runAfter": {
                                "Email": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/datasets/default/files/@{encodeURIComponent(encodeURIComponent(''/', parameters('storageAccount').containers.contracts, '/'',variables(''Filename'')))}/content')]",
                                "queries": {
                                    "inferContentType": true
                                }
                            }
                        },
                        "PGPEncryptor": {
                            "runAfter": {
                                "Get_blob_content": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Function",
                            "inputs": {
                                "body": "@body('Get_blob_content')",
                                "function": {
                                    "id": "[resourceId('Microsoft.Web/sites/functions', parameters('functionApp').name, parameters('functionApp').functions.pgpEncryptor)]"
                                }
                            }
                        },
                        "Send_an_email_(V2)": {
                            "runAfter": {
                                "PGPEncryptor": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Attachments": [
                                        {
                                            "ContentBytes": "@{base64(body('PGPEncryptor'))}",
                                            "Name": "Encrypted_Contract.txt"
                                        }
                                    ],
                                    "Body": "<p>Hi,<br>\n<br>\nPlease find your encrypted contract attached.<br>\n<br>\nCheers,<br>\nHR Department</p>",
                                    "Subject": "Your Contoso contract",
                                    "To": "@variables('Email')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "azureblob": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.azureblob)]",
                            "connectionName": "azureblob",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'azureblob')]"
                        },
                        "azureeventgrid": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.azureeventgrid)]",
                            "connectionName": "azureeventgrid",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'azureeventgrid')]"
                        },
                        "office365": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.office365)]",
                            "connectionName": "office365",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'office365')]"
                        }
                    }
                },
                "state": "Enabled"
            }
        }
    ]
}
