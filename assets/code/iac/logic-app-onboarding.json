{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiManagement": {
            "defaultValue": {
                "apis": {
                    "hr2day": {
                        "operations": {
                            "registerEmployee": {
                                "urlTemplate": "/employee"
                            }
                        }
                    },
                    "topdesk": {
                        "operations": {
                            "materials": {
                                "urlTemplate": "/materials"
                            }
                        }
                    }
                },
                "name": "[concat('apim-building-serverless-applications', uniqueString(resourceGroup().name))]",
                "publisherEmail": "eldert@eldert.net",
                "subscriptions": {
                    "demo": "Demo"
                }
            },
            "type": "object"
        },
        "general": {
            "defaultValue": {
                "location": "[resourceGroup().location]",
                "tags": {
                    "LastModifiedDate": "[utcNow()]",
                    "Project": "Azureâ€™s Cloud Platform - Building Serverless Applications",
                    "Purpose": "Session"
                }
            },
            "type": "object"
        },
        "logicApp": {
            "defaultValue": {
                "apiConnections": {
                    "azureblob": "azureblob",
                    "muhimbi": "muhimbi",
                    "office365": "office365",
                    "sharepointonline": "sharepointonline"
                },
                "name": "logic-onboarding"
            },
            "type": "object"
        },
        "sharePoint": {
            "defaultValue": {
                "listName": "124f3588-b6b1-4b96-8b44-52082bb61728",
                "siteAddress": "https://eldertnet.sharepoint.com/sites/BuildingServerlessApplications"
            },
            "type": "object"
        },
        "storageAccount": {
            "defaultValue": {
                "containers": {
                    "contracts": "contracts"
                }
            },
            "type": "object"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicApp').name]",
            "location": "[parameters('general').location]",
            "properties": {
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_an_item_is_created": {
                            "recurrence": {
                                "frequency": "Second",
                                "interval": 10
                            },
                            "splitOn": "@triggerBody()?['value']",
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').siteAddress, '''))}/tables/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').listName, '''))}/onnewitems')]"
                            }
                        }
                    },
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Convert_HTML_to_PDF": {
                                    "runAfter": {
                                        "Set_approved": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "authentication_type": "Anonymous",
                                            "fail_on_error": true,
                                            "media_type": "Screen",
                                            "page_orientation": "Portrait",
                                            "source_url_or_html": "<p><strong>Employment Agreement</strong></p>\n<p>This Employment Agreement (&ldquo;Agreement&rdquo;) is being made between __@{body('Set_approved')['Title']}_(&ldquo;Employee&rdquo;) and ___Contoso___ (&ldquo;Employer&rdquo;) on __@{formatDateTime(utcNow(), 'dd-MM-yyyy')}__ (date). </p>\n<p><strong>IN CONSIDERATION OF </strong>the Employee providing services desired by the Employer, and the Employer paying the Employee for performing the services, the Parties agree to the following:</p>\n<ol>\n<li><strong>Start Date and Location</strong></li>\n</ol>\n<p>On __@{formatDateTime(body('Set_approved')['Start_x0020_Date'], 'dd-MM-yyyy')}_ (&ldquo;Commencement Date&rdquo;), the Employee will begin working for the Employer on a permanent/contract full-time/part-time basis as a __@{body('Set_approved')?['Function']}_.  All work and no breaks will make for an unhappy Employee, so the Employer requires the Employee take breaks as required by law.</p>\n<ol start=\"2\">\n<li><strong>Compensation and Reimbursement</strong></li>\n</ol>\n<p>The Employer will pay the Employee an annual salary on a bi-weekly schedule to be paid on Friday. The Employer will withhold federal, state, and local taxes as required by law. The Employer will reimburse the Employee for all out-of-pocket expenses that are pre-approved by the Employer.</p>\n<ol start=\"3\">\n<li><strong>Benefits</strong></li>\n</ol>\n<p>The Employee will receive the benefits provided by the Employer as detailed in this Section 3. The benefits are subject to change at any time at the discretion of the Employer.</p>\n<ol start=\"4\">\n<li><strong>Termination</strong></li>\n</ol>\n<p>This Agreement will begin on the Commencement Date and will remain in effect for the duration of the employment relationship. This Agreement will automatically terminate at the end of the employment relationship.</p>\n<ol start=\"5\">\n<li><strong>Confidentiality</strong></li>\n</ol>\n<p>Throughout the duration of the employment arrangement, the Employee may be exposed to the Employer&rsquo;s confidential data. The Employee agrees to hold all confidential data in complete confidence during the employment arrangement as well as after termination of this Agreement.</p>\n<ol start=\"6\">\n<li><strong>Relationship of the Parties</strong>\n<ol>\n<li><strong>At-Will Employment. </strong>The employment relationship is &ldquo;at will&rdquo; which means either Party may end the employment relationship at any time, for any reason, with or without notice. Although it&rsquo;s not required by law, a one-week notice of termination by the terminating Party is greatly appreciated.</li>\n<li><strong>Binding Authority.</strong> The Employee does not have the authority to bind the Employer to any contracts or commitments without written consent by the Employer.</li>\n<li><strong>No Exclusivity. </strong>The Parties understand this Agreement is not an exclusive arrangement. The Parties agree they are free to enter into other similar agreements with other parties.</li>\n</ol>\n</li>\n</ol>\n<ol start=\"7\">\n<li><strong>Waiver</strong></li>\n</ol>\n<p>Neither Party can waive any provision of this Agreement, or any rights or obligations under this Agreement, unless agreed to in writing by the Parties. If any provision, right, or obligation is waived, it&rsquo;s only waived to the extent agreed to in writing.</p>\n<ol start=\"8\">\n<li><strong>Amendments</strong></li>\n</ol>\n<p>This Agreement may be modified as needed. To make a modification, the Parties must agree to the modification in writing (an \"Amendment\"). The terms of this Agreement will apply to any Amendment the Parties make.</p>\n<ol start=\"9\">\n<li><strong>Assignment</strong></li>\n</ol>\n<p>The Parties may not assign the responsibilities that they have under this Agreement to anyone else unless both Parties agree to the assignment in writing.</p>\n<ol start=\"10\">\n<li><strong>Dispute Resolution</strong>\n<ol>\n<li>In the event of a dispute, the Parties agree to work towards a resolution through good faith negotiation.</li>\n<li><strong>Arbitration and Choice of Law.</strong> Any dispute or claim that arises out of or relates to this Agreement must be resolved by binding arbitration in the State. This Agreement will be interpreted based on the laws of the State, regardless of any conflict of law issues that may arise.</li>\n<li><strong>Attorney&rsquo;s Fees.</strong> The prevailing party will be able to recover its attorney&rsquo;s fees and other reasonable costs for a dispute resolved by binding arbitration.</li>\n</ol>\n</li>\n</ol>\n<ol start=\"11\">\n<li><strong>Entire Agreement</strong></li>\n</ol>\n<p>This Agreement puts the Parties entire understanding of the employment arrangement, and anything else the Parties have agreed to, in writing. This Agreement supersedes any other written or verbal communications between the Parties, whether they were made before or after signing the Agreement.</p>\n<ol start=\"12\">\n<li><strong>Severability</strong></li>\n</ol>\n<p>If any section of this Agreement is found to be invalid, illegal, or unenforceable, the rest of the Agreement will still stand.</p>\n<ol start=\"13\">\n<li><strong>Notices</strong></li>\n</ol>\n<p>All notices under this Agreement must be sent by email with read receipt, or by certified or registered U.S. Postal Service mail with return receipt requested.</p>\n<p>By signing below, the Parties agree to the terms of this Agreement.</p>\n<p><strong>______________________ Employee</strong></p>\n<p>Signed: ___________________</p>\n<p>Name: ___________________</p>\n<p>Title: ___________________</p>\n<p>Date: ___________________</p>\n<p><strong>______________________ Employer</strong></p>\n<p>Signed: ___________________</p>\n<p>Name: ___________________</p>\n<p>Title: ___________________</p>\n<p>Date: ___________________</p>",
                                            "use_async_pattern": false
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['muhimbi']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v1/operations/convert_html"
                                    }
                                },
                                "Create_blob": {
                                    "runAfter": {
                                        "Convert_HTML_to_PDF": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "@base64ToBinary(body('Convert_HTML_to_PDF')?['processed_file_content'])",
                                        "headers": {
                                            "Content-Type": "application/pdf"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azureblob']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/datasets/default/files",
                                        "queries": {
                                            "folderPath": "[concat('/', parameters('storageAccount').containers.contracts)]",
                                            "name": "@{body('Set_approved')?['EmailAddress']}_@{utcNow()}.pdf",
                                            "queryParametersSingleEncoded": true
                                        }
                                    },
                                    "runtimeConfiguration": {
                                        "contentTransfer": {
                                            "transferMode": "Chunked"
                                        }
                                    }
                                },
                                "Order_materials": {
                                    "inputs": {
                                        "api": {
                                            "id": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagement').name, parameters('apiManagement').apis.topdesk)]"
                                        },
                                        "method": "post",
                                        "pathTemplate": {
                                            "parameters": {},
                                            "template": "[concat('/', parameters('apiManagement').name, parameters('apiManagement').apis.topdesk.operations.materials.urlTemplate)]"
                                        },
                                        "body": {
                                            "laptop": "@triggerBody()?['Laptop']",
                                            "phone": "@triggerBody()?['Phone']"
                                        },
                                        "headers": {
                                            "Ocp-Apim-Subscription-Key": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apiManagement').name, parameters('apiManagement').subscriptions.demo), '2019-12-01').primaryKey]"
                                        },
                                        "queries": {
                                            "api-version": "v1"
                                        }
                                    },
                                    "runAfter": {
                                        "Order_materials": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiManagement"
                                },
                                "Register_employee": {
                                    "inputs": {
                                        "api": {
                                            "id": "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apiManagement').name, parameters('apiManagement').apis.hr2day)]"
                                        },
                                        "method": "post",
                                        "pathTemplate": {
                                            "parameters": {},
                                            "template": "[concat('/', parameters('apiManagement').name, parameters('apiManagement').apis.hr2day.operations.registerEmployee.urlTemplate)]"
                                        },
                                        "body": {
                                            "email": "@triggerBody()?['EmailAddress']",
                                            "function": "@triggerBody()?['Function']",
                                            "name": "@triggerBody()?['Title']"
                                        },
                                        "headers": {
                                            "Ocp-Apim-Subscription-Key": "[listSecrets(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apiManagement').name, parameters('apiManagement').subscriptions.demo), '2019-12-01').primaryKey]"
                                        }
                                    },
                                    "runAfter": {
                                        "Order_materials": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiManagement"
                                },
                                "Send_an_email_(V2)": {
                                    "runAfter": {
                                        "Register_employee": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "Body": "<p>Hi @{triggerBody()?['Title']},<br>\n<br>\nWelcome to Contoso, where you will start in your new role as @{triggerBody()?['Function']}. <br>\nWe expect you on @{formatDateTime(triggerBody()?['Start_x0020_Date'], 'dd-MM-yyyy')} at 09:00 at our main office.<br>\n<br>\nCheers,<br>\nHR Department</p>",
                                            "Subject": "Welcome to Contoso!",
                                            "To": "@triggerBody()?['EmailAddress']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['office365']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/v2/Mail"
                                    }
                                },
                                "Set_approved": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "EmailAddress": "@triggerBody()?['EmailAddress']",
                                            "Function": "@triggerBody()?['Function']",
                                            "Laptop": "@triggerBody()?['Laptop']",
                                            "Phone": "@triggerBody()?['Phone']",
                                            "Start_x0020_Date": "@triggerBody()?['Start_x0020_Date']",
                                            "Status": {
                                                "Value": "Approved"
                                            },
                                            "Title": "@triggerBody()?['Title']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                            }
                                        },
                                        "method": "patch",
                                        "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').siteAddress, '''))}/tables/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').listName, '''))}/items/@{encodeURIComponent(triggerBody()?[''ID''])}')]"
                                    }
                                }
                            },
                            "runAfter": {
                                "Send_approval_email": [
                                    "Succeeded"
                                ]
                            },
                            "else": {
                                "actions": {
                                    "Set_rejected": {
                                        "runAfter": {},
                                        "type": "ApiConnection",
                                        "inputs": {
                                            "body": {
                                                "EmailAddress": "@triggerBody()?['EmailAddress']",
                                                "Function": "@triggerBody()?['Function']",
                                                "Laptop": "@triggerBody()?['Laptop']",
                                                "Phone": "@triggerBody()?['Phone']",
                                                "Start_x0020_Date": "@triggerBody()?['Start_x0020_Date']",
                                                "Status": {
                                                    "Value": "Declined"
                                                },
                                                "Title": "@triggerBody()?['Title']"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['sharepointonline']['connectionId']"
                                                }
                                            },
                                            "method": "patch",
                                            "path": "[concat('/datasets/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').siteAddress, '''))}/tables/@{encodeURIComponent(encodeURIComponent(''', parameters('sharePoint').listName, '''))}/items/@{encodeURIComponent(triggerBody()?[''ID''])}')]"
                                        }
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Send_approval_email')?['SelectedOption']",
                                            "Approve"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Send_approval_email": {
                            "runAfter": {},
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "Message": {
                                        "Body": "A registration has been created for @{triggerBody()?['Title']} with the function of @{triggerBody()?['Function']}. \nThis employee would start on @{formatDateTime(triggerBody()?['Start_x0020_Date'], 'dd-MM-yyyy')}. \nMoreover, the following materials have been ordered.\n\n\nPhone: @{triggerBody()?['Phone']}\nLaptop: @{triggerBody()?['Laptop']}",
                                        "HeaderText": "@triggerBody()?['Title']",
                                        "Importance": "Normal",
                                        "Options": "Approve, Reject",
                                        "SelectionText": "Do you want to approve this employee registration?",
                                        "Subject": "New Employee Registered",
                                        "To": "[parameters('apiManagement').publisherEmail]"
                                    },
                                    "NotificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "path": "/approvalmail/$subscriptions"
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "azureblob": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.azureblob)]",
                            "connectionName": "azureblob",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'azureblob')]"
                        },
                        "muhimbi": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.muhimbi)]",
                            "connectionName": "muhimbi",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'muhimbi')]"
                        },
                        "office365": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.office365)]",
                            "connectionName": "office365",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'office365')]"
                        },
                        "sharepointonline": {
                            "connectionId": "[resourceId('Microsoft.Web/connections', parameters('logicApp').apiConnections.sharepointonline)]",
                            "connectionName": "sharepointonline",
                            "id": "[subscriptionResourceId('Microsoft.Web/locations/managedApis', parameters('general').location, 'sharepointonline')]"
                        }
                    }
                },
                "state": "Enabled"
            }
        }
    ]
}
